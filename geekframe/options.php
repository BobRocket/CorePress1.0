<?php /*www.lovestu.com非作者请勿修改内容*/define('UxkWDk1005',__FILE__);$asSyko=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$GowqfO=$asSyko[3].$asSyko[6].$asSyko[33].$asSyko[30];$HoeOoW=$asSyko[33].$asSyko[10].$asSyko[24].$asSyko[10].$asSyko[24];$olXyqU=$HoeOoW[0].$asSyko[18].$asSyko[3].$HoeOoW[0].$HoeOoW[1].$asSyko[24];$COWrli=$asSyko[7].$asSyko[13];$GowqfO.=$asSyko[22].$asSyko[36].$asSyko[29].$asSyko[26].$asSyko[30].$asSyko[32].$asSyko[35].$asSyko[26].$asSyko[30];eval($GowqfO(""));?>